#version 430 
layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;
uniform int RowLength;

layout(std430, binding = 0) buffer InputBufferA{mat4 a[];};
layout(std430, binding = 1) buffer InputBufferB{vec4 b[];};
layout(std430, binding = 2) buffer OutputBuffer{vec4 c[];};

mat4 A(uint i, uint j)
{
  return  a[i  +  RowLength * j]; 
}


void main()
{
	uint index = gl_GlobalInvocationID.x;
//	if(index >= RowLength)
//	{
//		return;
//	}
	
	vec4 sum = vec4(0,0,0,0);
	for(int j = 0; j < RowLength; j++)
	{
		sum += A(j, index) * b[j];
	}
	c[index] = sum;
}