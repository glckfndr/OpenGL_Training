#version 430

layout( local_size_x = 100 ) in;

uniform float DeltaT = 0.0002;
uniform float ds = 0.01;
uniform int vortexNumber;
uniform float gamma;

layout(std430, binding = 0) buffer Pos 
{
  vec4 Position[];
};

layout(std430, binding = 1) buffer Vel 
{
  vec4 Velocity[];
};

layout(std430, binding = 2) buffer Vortexes 
{
  vec4 vortexPosition[];
};


vec3 BioSavar(vec3 p, vec3 r0, vec3 r1)
{
	vec3 r = p - r0;
	vec3 dl = r1 - r0;
	float dist = length(r);
	if(dist < 0.1)
		dist =  0.1;
	return cross(dl,r) * gamma/(dist*dist*dist);
}


void main() 
{
  uint idx = gl_GlobalInvocationID.x;

  vec3 p = Position[idx].xyz;
  vec3 velocity = vec3(0.0, 0.0, 0.0);
  for(int i = 0; i < vortexNumber - 1; i++)
  {
    vec3 r0 = vortexPosition[i].xyz;
	vec3 r1 = vortexPosition[i + 1].xyz;
	velocity += BioSavar(p, r0, r1);
  }
  velocity.z = 0;
  //Velocity[idx].x = 0.0;
  //Velocity[idx].y = 0.0;
  //Velocity[idx].z = 0.99;
  Velocity[idx] = vec4(velocity, 1);
  Position[idx] = vec4(p + velocity * DeltaT , 1);
  
  
}
