#version 430
layout(local_size_x = 128) in;
layout(std430, binding = 0) buffer particlePositionBuf
{
  vec4 particlePosition[];
};

struct Vortex
{
        vec2 r;
        float gamma;
		float rankinRadius;
};

layout(std430, binding = 1) buffer vortexBuf 
{
  Vortex vortex[];
};

layout(std430, binding = 2) buffer particleVelBuf
{
  vec4 particleVel[];
};

layout(std430, binding = 3) buffer startPosBuf
{
  vec4 startPos[];
};

layout(std430, binding = 4) buffer lifeTimeBuf
{
  vec2 lifeTime[];
};

uniform int vortexNumber;
uniform float deltaTime;
uniform vec4 flowVelocity;


#define PI 3.1415926535
highp const float koef = 1.0/2.0/PI;

vec2 Velocity2D(vec2 r, Vortex vortex)
{
	highp vec2 dr = r - vortex.r;
	highp float dist = length(dr);
	highp float self = step(dist, vortex.rankinRadius);
	
	float selector = step(vortex.rankinRadius, dist);
	dist = selector * dist + (1 - selector)*vortex.rankinRadius;
	float vx = - koef * vortex.gamma * dr.y / (dist * dist);
	float vy =  koef * vortex.gamma * dr.x / (dist * dist);
	return vec2(  vx ,  vy );

}

void main() 
{
  uint index = gl_GlobalInvocationID.x;
  vec2 p = particlePosition[index].xy;
  
  vec2 velocity = flowVelocity.xy;
  for(int i = 0; i < vortexNumber; i++)
  {
	velocity += Velocity2D(p, vortex[i]);
  }

  vec2 pos = p + velocity * deltaTime * 0.5;

  velocity = flowVelocity.xy;;
  for(int i = 0; i < vortexNumber; i++)
  {
	velocity += Velocity2D(pos, vortex[i]);
  }
  
  pos = p + velocity * deltaTime;
  lifeTime[index].x += deltaTime;
  
  if(lifeTime[index].x > lifeTime[index].y)
  { // when particle die move it at the initial position
	particlePosition[index].xy = startPos[index].xy;
	lifeTime[index].x = 0.0;
	// particle color depends on its position
	particleVel[index].xy = vec2(0);
  }
  else
  { // new particle position
		particleVel[index].xy = velocity;
		//pVelocity[index].xy = vec2(pos.y,0); 
		particlePosition[index].xy = pos;
  }
	// coefficient for alpha index in particle.frag
	particleVel[index].z = 1.0 - lifeTime[index].x/lifeTime[index].y;

}